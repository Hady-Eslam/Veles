<?php
namespace Tests\Auth;

use Veles\Auth\UsrAuthFactory;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-12-18 at 21:41:45.
 * @group Auth
 */
class UsrAuthFactoryTest extends \PHPUnit_Framework_TestCase
{
	/**
	 * @var UsrAuthFactory
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		$this->object = new UsrAuthFactory;
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{
	}

	/**
	 * @covers Veles\Auth\UsrAuthFactory::create
	 */
	public function testCreate()
	{
		$result = $this->object->create();
		$expected = 'Veles\Auth\Strategies\GuestStrategy';

		$msg = 'UsrAuthFactory::create() return wrong result!';
		$this->assertInstanceOf($expected, $result, $msg);

		$_REQUEST['ln'] = 'login';
		$_REQUEST['pw'] = 'password';

		$result = $this->object->create();
		$expected = 'Veles\Auth\Strategies\LoginFormStrategy';

		$msg = 'UsrAuthFactory::create() return wrong result!';
		$this->assertInstanceOf($expected, $result, $msg);

		unset($_REQUEST['ln'], $_REQUEST['pw']);

		$_COOKIE['id'] = 'login';
		$_COOKIE['pw'] = 'password';

		$result = $this->object->create();
		$expected = 'Veles\Auth\Strategies\CookieStrategy';

		$msg = 'UsrAuthFactory::create() return wrong result!';
		$this->assertInstanceOf($expected, $result, $msg);
	}
}
