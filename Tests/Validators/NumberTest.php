<?php
/**
 * Byte values validator
 * @file    Byte.php
 *
 * PHP version 5.4+
 *
 * @author  Alexander Yancharuk <alex@itvault.info>
 * @date    Вск Фев 17 10:48:43 2013
 * @copyright The BSD 3-Clause License.
 */

namespace Veles\Tests\Validators;

use PHPUnit_Framework_TestCase;
use Veles\Validators\Number;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-05-24 at 08:30:49.
 */
class NumberTest extends PHPUnit_Framework_TestCase
{
	/**
	 * @covers Veles\Validators\Number::check
	 * @group  Validators
	 * @see	   Number::check()
	 * @dataProvider checkProvider
	 */
	public function testCheck($number, $expected)
	{
		$object = new Number;
		$result = $object->check($number);

		$msg = 'Wrong Number::check() validation';
		$this->assertSame($expected, $result, $msg);
	}

	public function checkProvider()
	{
		return array(
			array('lalala', false),
			array(34, true),
			array('34', true),
			array(2147483649, false)
		);
	}

	/**
	 * @covers Veles\Validators\Number::__construct
	 * @group  Validators
	 * @see	   Number::__construct()
	 */
	public function testConstruct()
	{
		$expect_min = 10;
		$expect_max = 100;
		$object = new Number($expect_min, $expect_max);

		$msg = 'Wrong value of Number::min';
		$this->assertAttributeSame($expect_min, 'min', $object, $msg);

		$msg = 'Wrong value of Number::max';
		$this->assertAttributeSame($expect_max, 'max', $object, $msg);

		$expect_min = 1;
		$expect_max = 2147483647;
		$object = new Number;

		$msg = 'Wrong value of Number::min';
		$this->assertAttributeSame($expect_min, 'min', $object, $msg);

		$msg = 'Wrong value of Number::max';
		$this->assertAttributeSame($expect_max, 'max', $object, $msg);
	}
}
